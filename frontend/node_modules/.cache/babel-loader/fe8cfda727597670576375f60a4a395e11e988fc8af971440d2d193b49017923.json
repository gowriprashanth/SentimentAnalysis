{"ast":null,"code":"var _jsxFileName = \"/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js\",\n  _s = $RefreshSig$();\n// ImageUpload.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './ImageUpload.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate(); // Hook to navigate to different routes\n\n  const onFileChange = event => {\n    // Reset upload status\n    setUploadStatus('');\n    // Update the state with selected file\n    setSelectedFile(event.target.files[0]);\n  };\n  const onFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = function () {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        axios.post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", {\n          body: base64String\n        }).then(response => {\n          console.log(\"File uploaded successfully\", response);\n          setUploadStatus('Upload successful!');\n\n          // Wait for some time before navigating, e.g., 3 seconds\n          setTimeout(() => {\n            navigate('/sentiment');\n          }, 3500);\n        }).catch(error => {\n          console.error(\"Error uploading file\", error);\n          setUploadStatus('Error uploading file.');\n        });\n      };\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setUploadStatus('Please select a file to upload.');\n    }\n  };\n\n  // File content to be displayed after file upload is complete\n  const fileData = () => {\n    if (selectedFile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"file-details\",\n          children: \"File Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-info\",\n          children: [\"File Name: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-info\",\n          children: [\"File Type: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"file-info\",\n          children: [\"Last Modified: \", selectedFile.lastModifiedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"select-file-message\",\n          children: \"Select a file before pressing the upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"upload-heading\",\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange,\n      className: \"file-info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFileUpload,\n      className: \"upload-button\",\n      children: \"Upload!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-data\",\n      children: fileData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `upload-status ${uploadStatus ? 'success' : 'error'}`,\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"ar4JFupFpEtC+M1+llJoKPR95BI=\", false, function () {\n  return [useNavigate];\n});\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","navigate","onFileChange","event","target","files","onFileUpload","reader","FileReader","onloadend","base64String","result","replace","post","body","then","response","console","log","setTimeout","catch","error","readAsDataURL","fileData","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","type","lastModifiedDate","toDateString","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js"],"sourcesContent":["// ImageUpload.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './ImageUpload.css'; // Import the CSS file\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate(); // Hook to navigate to different routes\n\n  const onFileChange = event => {\n    // Reset upload status\n    setUploadStatus('');\n    // Update the state with selected file\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = function () {\n        const base64String = reader.result\n          .replace('data:', '')\n          .replace(/^.+,/, '');\n\n        axios\n          .post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", {\n            body: base64String\n          })\n          .then(response => {\n            console.log(\"File uploaded successfully\", response);\n            setUploadStatus('Upload successful!');\n\n            // Wait for some time before navigating, e.g., 3 seconds\n            setTimeout(() => {\n              navigate('/sentiment');\n            }, 3500);\n          })\n          .catch(error => {\n            console.error(\"Error uploading file\", error);\n            setUploadStatus('Error uploading file.');\n          });\n      };\n\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setUploadStatus('Please select a file to upload.');\n    }\n  };\n\n  // File content to be displayed after file upload is complete\n  const fileData = () => {\n    if (selectedFile) {\n      return (\n        <div>\n          <h2 className=\"file-details\">File Details:</h2>\n          <p className=\"file-info\">File Name: {selectedFile.name}</p>\n          <p className=\"file-info\">File Type: {selectedFile.type}</p>\n          <p className=\"file-info\">Last Modified: {selectedFile.lastModifiedDate.toDateString()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4 className=\"select-file-message\">Select a file before pressing the upload button</h4>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h1 className=\"upload-heading\">Upload an Image</h1>\n      <input type=\"file\" onChange={onFileChange} className=\"file-info\" />\n      <button onClick={onFileUpload} className=\"upload-button\">\n        Upload!\n      </button>\n      <div className=\"file-data\">{fileData()}</div>\n      <p className={`upload-status ${uploadStatus ? 'success' : 'error'}`}>{uploadStatus}</p>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}