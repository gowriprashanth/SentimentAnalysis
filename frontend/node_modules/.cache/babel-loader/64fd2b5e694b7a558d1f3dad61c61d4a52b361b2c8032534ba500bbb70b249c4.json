{"ast":null,"code":"var _jsxFileName = \"/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const onFileChange = event => {\n    // Update the state\n    setSelectedFile(event.target.files[0]);\n  };\n  const onFileUpload = () => {\n    // Check if a file is selected\n    if (selectedFile) {\n      // Create an object of formData\n      const formData = new FormData();\n\n      // Update the formData object\n      formData.append(\"image\", selectedFile, selectedFile.name);\n\n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", formData).then(response => {\n        console.log(\"File uploaded successfully\", response);\n        // Handle the response here. For example, you can set state to show a success message.\n      }).catch(error => {\n        console.error(\"Error uploading file\", error);\n        // Handle the error here. For example, you can set state to show an error message.\n      });\n    } else {\n      // Alert or handle the case where no file is selected\n      console.log('Please select a file to upload');\n    }\n  };\n\n  // File content to be displayed after\n  // file upload is complete\n  const fileData = () => {\n    if (selectedFile) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"File Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Name: \", selectedFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"File Type: \", selectedFile.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Modified: \", selectedFile.lastModifiedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose a file before pressing the upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFileUpload,\n      children: \"Upload!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), fileData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","onFileChange","event","target","files","onFileUpload","formData","FormData","append","name","post","then","response","console","log","catch","error","fileData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","lastModifiedDate","toDateString","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const onFileChange = event => {\n    // Update the state\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = () => {\n    // Check if a file is selected\n    if (selectedFile) {\n      // Create an object of formData\n      const formData = new FormData();\n    \n      // Update the formData object\n      formData.append(\n        \"image\",\n        selectedFile,\n        selectedFile.name\n      );\n    \n      // Request made to the backend api\n      // Send formData object\n      axios.post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", formData)\n        .then(response => {\n          console.log(\"File uploaded successfully\", response);\n          // Handle the response here. For example, you can set state to show a success message.\n        })\n        .catch(error => {\n          console.error(\"Error uploading file\", error);\n          // Handle the error here. For example, you can set state to show an error message.\n        });\n    } else {\n      // Alert or handle the case where no file is selected\n      console.log('Please select a file to upload');\n    }\n  };\n  \n  // File content to be displayed after\n  // file upload is complete\n  const fileData = () => {\n    if (selectedFile) {   \n      return (\n        <div>\n          <h2>File Details:</h2>\n          <p>File Name: {selectedFile.name}</p>\n          <p>File Type: {selectedFile.type}</p>\n          <p>Last Modified: {selectedFile.lastModifiedDate.toDateString()}</p>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <br />\n          <h4>Choose a file before pressing the upload button</h4>\n        </div>\n      );\n    }\n  };\n  \n  return (\n    <div>\n        <h1>Upload an Image</h1>\n        <input type=\"file\" onChange={onFileChange} />\n        <button onClick={onFileUpload}>\n          Upload!\n        </button>\n        {fileData()}\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}