{"ast":null,"code":"var _jsxFileName = \"/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const onFileChange = event => {\n    // Reset upload status\n    setUploadStatus('');\n    // Update the state with selected file\n    setSelectedFile(event.target.files[0]);\n  };\n  const onFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      reader.onloadend = function () {\n        const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n        axios.post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", {\n          image: base64String // Assuming the API expects a JSON object with a base64 string\n        }).then(response => {\n          console.log(\"File uploaded successfully\", response);\n          setUploadStatus('Upload successful!'); // Set upload status on success\n        }).catch(error => {\n          console.error(\"Error uploading file\", error);\n          setUploadStatus('Error uploading file.'); // Set upload status on error\n        });\n      };\n\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setUploadStatus('Please select a file to upload.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFileUpload,\n      children: \"Upload!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"Sh/hChyaCqaA9N7dEugjkofgeto=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","onFileChange","event","target","files","onFileUpload","reader","FileReader","onloadend","base64String","result","replace","post","image","then","response","console","log","catch","error","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/gowriprashanth/sentiment-analysis/src/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n\n  const onFileChange = event => {\n    // Reset upload status\n    setUploadStatus('');\n    // Update the state with selected file\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onFileUpload = () => {\n    if (selectedFile) {\n      const reader = new FileReader();\n\n      reader.onloadend = function() {\n        const base64String = reader.result\n          .replace('data:', '')\n          .replace(/^.+,/, '');\n\n        axios.post(\"https://8cixrhnhu1.execute-api.us-east-1.amazonaws.com/dev/upload-image\", {\n          image: base64String // Assuming the API expects a JSON object with a base64 string\n        })\n        .then(response => {\n          console.log(\"File uploaded successfully\", response);\n          setUploadStatus('Upload successful!'); // Set upload status on success\n        })\n        .catch(error => {\n          console.error(\"Error uploading file\", error);\n          setUploadStatus('Error uploading file.'); // Set upload status on error\n        });\n      };\n\n      reader.readAsDataURL(selectedFile);\n    } else {\n      setUploadStatus('Please select a file to upload.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload an Image</h1>\n      <input type=\"file\" onChange={onFileChange} />\n      <button onClick={onFileUpload}>\n        Upload!\n      </button>\n      {uploadStatus && <p>{uploadStatus}</p>}\n    </div>\n  );\n}\n\nexport default ImageUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,YAAY,GAAGC,KAAK,IAAI;IAC5B;IACAF,eAAe,CAAC,EAAE,CAAC;IACnB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIR,YAAY,EAAE;MAChB,MAAMS,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAE/BD,MAAM,CAACE,SAAS,GAAG,YAAW;QAC5B,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAM,CAC/BC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CACpBA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;QAEtBnB,KAAK,CAACoB,IAAI,CAAC,yEAAyE,EAAE;UACpFC,KAAK,EAAEJ,YAAY,CAAC;QACtB,CAAC,CAAC,CACDK,IAAI,CAACC,QAAQ,IAAI;UAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;UACnDf,eAAe,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACzC,CAAC,CAAC,CACDkB,KAAK,CAACC,KAAK,IAAI;UACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CnB,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC;MACJ,CAAC;;MAEDM,MAAM,CAACc,aAAa,CAACvB,YAAY,CAAC;IACpC,CAAC,MAAM;MACLG,eAAe,CAAC,iCAAiC,CAAC;IACpD;EACF,CAAC;EAED,oBACEN,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB/B,OAAA;MAAOgC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7C/B,OAAA;MAAQkC,OAAO,EAAEvB,YAAa;MAAAgB,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR1B,YAAY,iBAAIL,OAAA;MAAA2B,QAAA,EAAItB;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAA7B,EAAA,CAjDKD,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}