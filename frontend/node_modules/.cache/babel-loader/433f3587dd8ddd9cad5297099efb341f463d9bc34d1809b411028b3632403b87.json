{"ast":null,"code":"var _jsxFileName = \"/Users/gowriprashanth/git/kanagaraj/TermProject/frontend/src/SentimentText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport './Sentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sentiment() {\n  _s();\n  const [data, setData] = useState({\n    ExtractedText: '',\n    Sentiment: '',\n    SentimentScore: 0,\n    Subject: 0\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://u0e8x85ktk.execute-api.us-east-1.amazonaws.com/prod/text-analysis\").then(response => {\n      setData(JSON.parse(response.data.body)); // Parse the JSON string\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setError(error);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sentiment-heading\",\n      children: \"Extracted Text and Sentiment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"extracted-text-label\",\n        children: \"Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data.ExtractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"sentiment-label\",\n        children: \"Sentiment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: data.Sentiment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"650px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: [\"Sentiment Score\", \"Subjectivity Score\"],\n          datasets: [{\n            label: \"Sentiment Analysis\",\n            data: [data.SentimentScore, data.Subject],\n            backgroundColor: [\"#d41c1c\", \"#007BFF\"],\n            borderWidth: 0.5\n          }]\n        },\n        height: 400,\n        options: {\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                // The y-axis value will start from zero\n                beginAtZero: true\n              }\n            }]\n          },\n          legend: {\n            labels: {\n              fontSize: 15\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Sentiment, \"xdg0Le1cE6rZhZp0KDm6XJkmSGc=\");\n_c = Sentiment;\nexport default Sentiment;\nvar _c;\n$RefreshReg$(_c, \"Sentiment\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","Chart","jsxDEV","_jsxDEV","Sentiment","_s","data","setData","ExtractedText","SentimentScore","Subject","isLoading","setIsLoading","error","setError","get","then","response","JSON","parse","body","catch","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","labels","datasets","label","backgroundColor","borderWidth","height","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","legend","fontSize","_c","$RefreshReg$"],"sources":["/Users/gowriprashanth/git/kanagaraj/TermProject/frontend/src/SentimentText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport './Sentiment.css'; \n\nfunction Sentiment() {\n  const [data, setData] = useState({ ExtractedText: '', Sentiment: '', SentimentScore: 0, Subject: 0 });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get(\"https://u0e8x85ktk.execute-api.us-east-1.amazonaws.com/prod/text-analysis\")\n      .then(response => {\n        setData(JSON.parse(response.data.body)); // Parse the JSON string\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setError(error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"sentiment-container\">\n      <h1 className=\"sentiment-heading\">Extracted Text and Sentiment</h1>\n      <p><strong className=\"extracted-text-label\">Text:</strong> <span>{data.ExtractedText}</span></p>\n      <p><strong className=\"sentiment-label\">Sentiment:</strong> <span>{data.Sentiment}</span></p>\n\n    <div style={{ maxWidth: \"650px\" }}>\n        <Bar data= {{\n          labels:[\"Sentiment Score\",\"Subjectivity Score\"],\n          datasets:[\n            {\n            label: \"Sentiment Analysis\",\n            data:[ data.SentimentScore, data.Subject ],\n            backgroundColor:[\"#d41c1c\",\"#007BFF\"],\n            borderWidth: 0.5,\n            \n          },\n        ],\n        }}\n        \n        height={400}\n\n        options={{\n            maintainAspectRatio: false,\n            scales: {\n                yAxes: [\n                    {\n                        ticks: {\n                      // The y-axis value will start from zero\n                            beginAtZero: true,\n                        },\n                    },\n                ],\n            },\n            legend: {\n                labels: {\n                    fontSize: 15,\n                },\n            },\n        }}\n\n        />\n        </div>\n    </div>\n  );\n}\n\nexport default Sentiment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}